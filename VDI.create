#!/usr/bin/env ocamlscript
Ocaml.sources := ["common.ml"; "lvm.ml"];
Ocaml.packs := ["xapi-idl"; "cmdliner"; "re.str"; "ounit"];
Ocaml.ocamlflags := ["-thread"]
--
(*
 * Copyright (C) Citrix Systems Inc.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published
 * by the Free Software Foundation; version 2.1 only. with the special
 * exception on linking described in file LICENSE.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *)

open Xapi.Storage.Types.VDI.Create
open Xapi.Storage.Types
open Common
open OUnit

let command { In.dbg; sr; name_label; name_description; size } =
  Lvm.lvcreate sr name_label Int64.( (size + mib - 1L) / mib );
  {
    vdi = name_label;
    content_id = "";
    name_label = name_label;
    name_description = name_description;
    is_a_snapshot = false;
    snapshot_time = "";
    snapshot_of = "";
    read_only = false;
    virtual_size = size;
    physical_utilisation = 0L 
  }

let test_lvcreate () =
  let vol = Lvm.make_temp_volume () in
  let vg_name = "hello" in
  finally
    (fun () ->
      Lvm.vgcreate vg_name [ vol ];
      Lvm.lvcreate vg_name "testvol" 1L;
      Lvm.lvremove vg_name "testvol";
    ) (fun () ->
      Lvm.remove_temp_volume vol
    )

let test common =
  let suite = "create" >::: [
    "lvcreate" >:: test_lvcreate;
  ] in
  ignore(run_test_tt ~verbose:common.Common.verbose suite)

(* Command-line parsing *)
open Cmdliner

let wrap common args =
  if common.Common.test then begin
    test common;
    `Ok ()
  end else begin
    let result = command args in
    let rpc = Out.rpc_of_t result in
    print_endline (Jsonrpc.to_string rpc);
    `Ok ()
  end

let cmd =
  let doc = "create a virtual disk (VDI)" in
  let man = help in
  Term.(ret (pure wrap $ common_options_t $ Xapi.Storage.Cmdline.VDI.Create.t)),
  Term.info Sys.argv.(0) ~version:version ~sdocs:_common_options ~doc ~man

let _ =
  match Term.eval cmd with
  | `Error _ -> exit 1
  | _ -> exit 0
